#!/bin/bash

# Project:      
# Author:        CNR-IREA
# Last update:  
# Element:       6
# Context:       /application/sbas
# Name:          run
# Version:       1.0
# Description:   

 
# Contact: sbas-help@irea.cnr.it

BASE_DIR=$_CIOP_APPLICATION_PATH/sbas
export PATH=$BASE_DIR:$PATH
export PATH=/usr/local/bin:$PATH

# Load CIOP include
source ${ciop_job_include}

# Load common functions, error and variables
source $BASE_DIR/wf/common/conf
source $BASE_DIR/wf/common/functions
source $BASE_DIR/wf/common/error

# Permits complete debug information
ciop-enable-debug true

# Trap an exit signal to exit properly
trap cleanExit EXIT

# Test that all required binaries are accessible
IDL=`which idl`
[ -z $IDL ] && exit $NO_IDL


###########################################################
#                   Job Configuration                     #                                      
###########################################################

job_name="6"

# ELIMINATO DA CLD  VIDEO_PLOT=`ciop-getparam "videoPlot"`

###########################################################
#                          Job Run                        #                                      
###########################################################

OUTPUT_DIR=$GENERAL_DIR/$_WF_ID
TMP=/tmp/$_WF_ID/tmp/$job_name/$_JOB_ID/$_TASK_ID
DATA_DEM=/tmp/$_WF_ID/dem/$job_name/$_JOB_ID/$_TASK_ID

mkdir -p $TMP $DATA_DEM

# Aggregate paramfiles (uses the first)
aggregate_paramFiles

task_paramfilename="paramFile.txt"
task_paramfile=$OUTPUT_DIR/$task_paramfilename

# ELIMINATO DA CLD  setup_idl_param_file VIDEO_PLOT $VIDEO_PLOT int $task_paramfile
setup_idl_param_file PATH_DEM $DATA_DEM str $task_paramfile


#creo la directory degli INPUT e OUTPUT
mkdir -p $OUTPUT_DIR/INPUT_OUTPUT/6

###############################
# IDL processing Bounding Box #
###############################

step="bbox"

ciop-log "INFO" "Starting step ($step)..."

# Note: Here the idl input (path and paramfile) is swapped!
prepare_idl_input $task_paramfilename $OUTPUT_DIR >$TMP/input_idl_$step
idl -rt="$IDL_EXECUTABLE_BBOX" < $TMP/input_idl_$step 2>&1 | tee $TMP/output_idl_$step | sed "s/'/\\\'/" | xargs -I {} bash -c 'ciop-log "INFO" "{}"'
check_idl_error $TMP/output_idl_$step

lonmin=`grep Upper_Left  $TMP/output_idl_$step | awk '{print $3}'`
latmax=`grep Upper_Left  $TMP/output_idl_$step | awk '{print $2}'`
latmin=`grep Lower_Rigth $TMP/output_idl_$step | awk '{print $2}'`
lonmax=`grep Lower_Rigth $TMP/output_idl_$step | awk '{print $3}'`

###################
# Collecting DEMs #
###################

ciop-catquery -se SRTM4_V1 --outputfields=dclite4g:onlineResource -b $lonmin,$latmin,$lonmax,$latmax | xargs ciop-copy -c -O $DATA_DEM/ -U {} >&2

###########################
# IDL processing step "6" #
###########################

step="6"

ciop-log "INFO" "Starting step ($step)..."

prepare_idl_input $OUTPUT_DIR $task_paramfilename $step "q" >$TMP/input_idl_$step
idl -rt="$IDL_EXECUTABLE" < $TMP/input_idl_$step 2>&1 | tee $TMP/output_idl_$step | sed "s/'/\\\'/" | xargs -I {} bash -c 'ciop-log "INFO" "{}"'
check_idl_error $TMP/output_idl_$step

###################
# Publish results #
###################

#ciop-publish -r $OUTPUT_DIR | egrep '.*\/DEM_patch_.*$'
ciop-publish -r $OUTPUT_DIR/DEM/ | egrep 'DEM_patch_.*$'

# Clean up intermediate input/output files
#  ELIMINATO DA CLD   [ $CLEAN_UP == "y"  ] && rm -Rf $TMP

mv $TMP/output_idl_$step $OUTPUT_DIR/INPUT_OUTPUT/6/output_idl_$step
mv $TMP/input_idl_$step $OUTPUT_DIR/INPUT_OUTPUT/6/input_idl_$step



exit 0
