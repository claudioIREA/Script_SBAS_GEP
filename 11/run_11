#!/bin/bash

# Project:       
# Author:        CNR-IREA
# Last update:   
# Element:       11
# Context:       /application/sbas
# Name:          run
# Version:       1.0
# Description:   

 
# Contact: sbas-help@irea.cnr.it

BASE_DIR=$_CIOP_APPLICATION_PATH/sbas
export PATH=$BASE_DIR:$PATH
export PATH=/usr/local/bin:$PATH

# Load CIOP include
source ${ciop_job_include}

# Load common functions, error and variables
source $BASE_DIR/wf/common/conf
source $BASE_DIR/wf/common/functions
source $BASE_DIR/wf/common/error

# Permits complete debug information
ciop-enable-debug true

# Trap an exit signal to exit properly
trap cleanExit EXIT

# Test that all required binaries are accessible
IDL=`which idl`
[ -z $IDL ] && exit $NO_IDL


###########################################################
#                   Job Configuration                     #                                      
###########################################################

job_name="11"

###########################################################
#                          Job Run                        #                                      
###########################################################

OUTPUT_DIR=$GENERAL_DIR/$_WF_ID
TMP=/tmp/$_WF_ID/tmp/$job_name/$_JOB_ID/$_TASK_ID

mkdir -p $TMP

# Aggregate paramfiles (uses the first)
aggregate_paramFiles

task_paramfilename="paramFile.txt"
task_paramfile=$OUTPUT_DIR/$task_paramfilename

#creo la directory degli INPUT e OUTPUT
mkdir -p $OUTPUT_DIR/INPUT_OUTPUT/11


############################
# IDL processing step "11" #
############################

step="11"

ciop-log "INFO" "Starting step ($step)..."

prepare_idl_input $OUTPUT_DIR $task_paramfilename $step "q" >$TMP/input_idl_$step
idl -rt="$IDL_EXECUTABLE" < $TMP/input_idl_$step 2>&1 | tee $TMP/output_idl_$step | sed "s/'/\\\'/" | xargs -I {} bash -c 'ciop-log "INFO" "{}"'
check_idl_error $TMP/output_idl_$step

###################
# Publish results #
###################

mv $TMP/output_idl_$step $OUTPUT_DIR/INPUT_OUTPUT/11/output_idl_$step
mv $TMP/input_idl_$step $OUTPUT_DIR/INPUT_OUTPUT/11/input_idl_$step


# Clean up intermediate input/output files
#  ELIMINATO DA CLD    [ $CLEAN_UP == "y"  ] && rm -Rf $TMP

echo "$OUTPUT_DIR/LOG/currPairs_CIOP.txt" ciop-publish -s

#oppure
#for i in `cat $OUTPUT_DIR/LOG/currPairs.txt`; do 
#    j=$((j+1))
#    ciop-publish $j
#done


exit 0
